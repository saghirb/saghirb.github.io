[
["index.html", "Saghir’s Notebook ‘Wiki’ Chapter 1 Administrative Info", " Saghir’s Notebook ‘Wiki’ Version: 20 September 2018 (11:33) Chapter 1 Administrative Info Personal1 Saghir Bashir Address Line 1 Address Line 2 Address Line 3 Country Tel: +xx 123 456 789 GSM: +xx 987 654 321 Email: example@example.com Website: http://dsup.org SS Number: AAA-NNNNNNNNNN ... Professional Organisation Name Address Line 1 Address Line 2 Address Line 3 Country Tel: +xx 321 456 789 GSM: +xx 789 654 321 Email: work@example.com Website: http://ilustat.com Emergency Contact: &lt;HR Depart?&gt; Emergency Phone: &lt;Number&gt; Emergency Email: &lt;sick@example.com&gt; Speaker Deck (saghirb) Medium (saghirb) ilustat Data Science Unplugged (dsup) Copy &amp; Paste friendly versions↩ "],
["bookmarks.html", "Chapter 2 Bookmarks", " Chapter 2 Bookmarks News BBC News Guardian New Internationlist Wiki Tribune wttr.in/London Geek News Hacker News R weekly Stats Life Login free Twitter :) #rstats David Spiegelhalter Hadley Wickham ilustat Matt Dowle Yihui Xie Check Accounts My bank My other bank Professional Society IT Security Bruce Schneier Krebs on Security Linux/Unix Book: The Unix Workbench nixCraft DS - Docs Bookdown book – Xie Yihui Happy With Git R R Start Here Rmarkdown Fun The Onion xkcd Food BBC Good Food MacOS Brew "],
["Links.html", "Chapter 3 Useful Links 3.1 Medium 3.2 To Read 3.3 To Watch 3.4 Archive – Read 3.5 Archive – Video", " Chapter 3 Useful Links &lt;Section simplified&gt; 3.1 Medium Hugo Ferreira 3.2 To Read Bookdown Contest Brute Force Incognito Browsing Privatizing Povery 3.3 To Watch Onora O’Neill: What we don’t understand about trust 3.4 Archive – Read Donald Knuth versus Email How to beat LinkedIn: The Game Introduction to text manipulation on UNIX-based systems On the Phenomenon of Bullshit Jobs: A Work Rant by David Graeber Reading with a Pencil 3.5 Archive – Video Onora O’Neill: What we don’t understand about trust "],
["life-admin.html", "Chapter 4 Life Admin 4.1 Government 4.2 Utilities 4.3 Financial 4.4 Address Change", " Chapter 4 Life Admin This contains information that I usually have to look up in an emergency or to feed the daily bureaucracy we encounter &lt;sigh!&gt;. 4.1 Government Tax Authority &lt;censored&gt; - Tax reference number / Social Security - Address - Customer service telephone number - Website - Secure login site Residency related &lt;censored&gt; - Residency / ID card number - Address - Customer service telephone number - Website - Secure login website Healthcare &lt;censored&gt; Government - Healthcare number - Address - Customer service telephone number - Website - Secure login website Insurance - Insurance reference number - Address - Customer service telephone number - Website - Secure login website 4.2 Utilities Electricity &lt;censored&gt; Information to include: - Customer reference number - Address - Customer service telephone number - Website - Secure login site - Emergency contact info Gas See Electricity for template. Water See Electricity for template. Internet, telephone, cable &lt;censored&gt; Mobile phone See Electricity for template. 4.3 Financial Bank Name &lt;censored&gt; Information to include: - Account numbers - Bank Address - Customer service telephone number - Website - Secure login site - Emergency contact info Credit cards &lt;censored&gt; Information to include: - Card numbers - Provider - Customer service telephone number - Website - Secure login site - Emergency contact info (for cancellations) Pensions &lt;censored&gt; Information to include: - Pension Plan Number - Provider - Address - Customer service telephone number - Website - Secure login site 4.4 Address Change Inform the following of any change in address: Tax authority Government residency Banks Pension providers Family member 1 .. Family member n "],
["address-book-plus.html", "Chapter 5 Address Book Plus 5.1 Birthdays &amp; Anniversaries 5.2 People Info", " Chapter 5 Address Book Plus 5.1 Birthdays &amp; Anniversaries Type Month Date Name Birthday Jan 10-1-1993 David Bartlett FAKE INFO 12-1-NA Aimee Anthony FAKE INFO 13-1-NA Shirley Brady FAKE INFO 19-1-1987 Kasey Ellis FAKE INFO Feb 3-2-1988 Sandy Little FAKE INFO 12-2-1990 Lloyd Hodge FAKE INFO 23-2-1985 Marylou Church FAKE INFO Mar 13-3-1982 Alisa Guerrero FAKE INFO 14-3-1966 Landon Munoz FAKE INFO 18-3-1962 Angelo Woods FAKE INFO 26-3-1987 Rosemarie Contreras FAKE INFO 30-3-1971 Noelle Leonard FAKE INFO Apr 8-4-1973 Angelo Woods FAKE INFO May 1-5-1986 Isabella Foreman FAKE INFO 4-5-1982 Claudio Allison FAKE INFO 6-5-1979 Celia Morrison FAKE INFO 14-5-1976 Laverne Hopper FAKE INFO 24-5-NA Kurtis Mcleod FAKE INFO Jun 1-6-1969 Elnora Pitts FAKE INFO 16-6-1966 Wilson Bonner FAKE INFO Jul 5-7-1974 Sally Rollins FAKE INFO 6-7-1984 Taylor Avery FAKE INFO 14-7-1995 Traci Ballard FAKE INFO 25-7-1962 Ashley Everett FAKE INFO Aug 14-8-1961 August Stuart FAKE INFO 21-8-1986 Vera Flores FAKE INFO 23-8-NA Georgina Valencia FAKE INFO Sep 27-9-1970 Claudia Baxter FAKE INFO 28-9-1993 Luz Carroll FAKE INFO 28-9-1984 Tod Burton FAKE INFO Oct 2-10-1984 Bessie Rosales FAKE INFO 17-10-1965 Jarred Rojas FAKE INFO 24-10-1977 Alisa Guerrero FAKE INFO 28-10-1971 Aimee Anthony FAKE INFO Nov 10-11-1977 Terrence Chambers FAKE INFO 19-11-1988 Chasity Cox FAKE INFO 29-11-NA Anita Alexander FAKE INFO Dec 13-12-1974 Marla Franks FAKE INFO 22-12-1973 Bessie Kinney FAKE INFO Wedding Jul 25-7-1995 Jarred Rojas FAKE INFO Oct 8-10-2008 Marylou Church FAKE INFO 5.2 People Info Name Telephone Address Aimee Anthony FAKE INFO +1 708 xxx xxxx 1002 Hamlet St Alton, IL 62002 USA Alisa Guerrero FAKE INFO +1 708 xxx xxxx 65 Plymth Terr Aurora, IL 60507 USA Angelo Woods FAKE INFO +1 512 xxx xxxx 257 Willow Rd Austin, TX 78710 USA Anita Alexander FAKE INFO +1 409 xxx xxxx 548 Main St Galveston, TX 77553 USA Ashley Everett FAKE INFO +1 919 xxx xxxx 174 Orange West Burlington, NC 27215 USA August Stuart FAKE INFO +1 409 xxx xxxx 961 Tellfly St Galveston, TX 77553 USA Bessie Kinney FAKE INFO +1 708 xxx xxxx 404 Dorwin Rd Aurora, IL 60507 USA Bessie Rosales FAKE INFO +1 313 xxx xxxx 397 Willow Rd Detroit, MI 48233 USA Celia Morrison FAKE INFO +1 414 xxx xxxx 439 Erming Ln Milwaukee, WI 53201 USA Chasity Cox FAKE INFO +1 201 xxx xxxx 952 Brandy Run Passaic, NJ 07055 USA Claudia Baxter FAKE INFO +1 316 xxx xxxx 474 Columbus Dr Emporia, KS 66801 USA Claudio Allison FAKE INFO +1 814 xxx xxxx 563 Lake Dr Erie, PA 16515 USA David Bartlett FAKE INFO +1 515 xxx xxxx 407 West Street Terr Ames, IA 50010 USA Elnora Pitts FAKE INFO +1 512 xxx xxxx 996 Brighton St Austin, TX 78710 USA Georgina Valencia FAKE INFO +1 602 xxx xxxx 244 Cedarwood Ln Phoenix, AZ 85026 USA Isabella Foreman FAKE INFO +1 708 xxx xxxx 768 Second St Alton, IL 62002 USA Jarred Rojas FAKE INFO +1 518 xxx xxxx 727 First St Albany, NY 12212 USA Kasey Ellis FAKE INFO +1 206 xxx xxxx 818 Main St Vancouver, WA 98661 USA Kurtis Mcleod – FAKE INFO +1 313 xxx xxxx 507 New First Rd Detroit, MI 48233 USA Landon Munoz FAKE INFO +1 513 xxx xxxx 895 Plymth Terr Hamilton, OH 45012 USA Laverne Hopper FAKE INFO +1 903 xxx xxxx 43 Freeton Blvd Irving, TX 75061 USA Lloyd Hodge FAKE INFO +1 708 xxx xxxx 611 Freeton Blvd Alton, IL 62002 USA Luz Carroll FAKE INFO +1 708 xxx xxxx 665 Dorwin Rd Aurora, IL 60507 USA Marla Franks FAKE INFO +1 316 xxx xxxx 820 Tellfly St Wichita, KS 67276 USA Marylou Church FAKE INFO +1 404 xxx xxxx 458 Brighton St Athens, GA 30601 USA Noelle Leonard FAKE INFO +1 615 xxx xxxx 413 Maple Ln Knoxville, TN 37901 USA Rosemarie Contreras FAKE INFO +1 305 xxx xxxx 164 Stonehedge Blvd Miami, FL 33152 USA RStudio Inc +1 844-448-1212 250 Northern Ave, Boston, MA 02210 Sally Rollins FAKE INFO +1 414 xxx xxxx 197 Spring County Blvd Appleton, WI 54911 USA Sandy Little FAKE INFO +1 510 xxx xxxx 285 Second St Berkeley, CA 94704 USA Sherlock Holmes +44xxx xxx xxxx 221B Baker Street London United Kingdom Shirley Brady FAKE INFO +1 316 xxx xxxx 212 Beley Rd Wichita, KS 67276 USA Taylor Avery FAKE INFO +1 408 xxx xxxx 217 Main St Sunnyvale, CA 94086 USA Terrence Chambers FAKE INFO +1 219 xxx xxxx 318 Plymth Terr Gary, IN 46401 USA Tod Burton FAKE INFO +1 409 xxx xxxx 932 Stonehedge Blvd Galveston, TX 77553 USA Traci Ballard FAKE INFO +1 513 xxx xxxx 942 Kennel Ln Hamilton, OH 45012 USA Vera Flores FAKE INFO +1 513 xxx xxxx 47 Third St Dayton, OH 45401 USA Wilson Bonner FAKE INFO +1 315 xxx xxxx 767 Spring County Blvd Auburn, NY 13021 USA "],
["people-facts.html", "Chapter 6 People Facts", " Chapter 6 People Facts Useful to know things when socialising with family or friends. Name Fact Angelo Woods FAKE INFO Gluten intolerance Angelo Woods FAKE INFO Vegetarian Celia Morrison FAKE INFO Allergic to pet hair Claudio Allison FAKE INFO Lactose &amp; tomato intolerance Elnora Pitts FAKE INFO Vegetarian Isabella Foreman FAKE INFO Vegetarian Kurtis Mcleod FAKE INFO Fear of dogs Landon Munoz FAKE INFO Garlic intolerance Laverne Hopper FAKE INFO Vegan Noelle Leonard FAKE INFO No strawberries Rosemarie Contreras FAKE INFO Not a vegetarian food fan Wilson Bonner FAKE INFO Meat only. No fruit or vegetables except potatoes. "],
["data-science.html", "Chapter 7 Data Science 7.1 Statistics 7.2 Rstats 7.3 Git &amp; Github 7.4 Books 7.5 R code", " Chapter 7 Data Science 7.1 Statistics &lt;Section Cut&gt; 7.2 Rstats Writing a package by Tomas Westlake tidyverse Suazan Baert dplyr Presentation Amsterdam 2018 Jenny Bryan’s Row-oriented workflows in R with the tidyverse purrr Package Introduction to purrr Jenny Bryan’s purrr Tutorial 7.3 Git &amp; Github Some useful references: Happy Git and GitHub for the useR – Jenny Bryan Git guides – Mara Averick Git and GitHub – R Packages by Hadley Wickham Version control with Git – Roel Hogervorst Working with a remote upstream libary git remote -v git fetch upstream git checkout master git merge upstream/master 7.4 Books R Markdown: The Definitive Guide Bookdown blogdown: Creating Websites with R Markdown R fo Data Science Data Visualization Handling Strings with R Efficient R programming Advanced R Data Science at the Command Line 7.5 R code tidyverse stuff Getting Started in R flexdashboard Chick weight data flexdashboard R Shiny Chick weight data app Portuguese Nutrition App &lt;cut&gt; "],
["linux.html", "Chapter 8 Linux 8.1 Command line - bash 8.2 Backups 8.3 PDF &amp; LaTeX 8.4 Image &amp; Video Processing 8.5 Security 8.6 System &amp; Hardware 8.7 Debian 8.8 Misc", " Chapter 8 Linux 8.1 Command line - bash Finding duplicates files fdupes -rSm . &gt; duplicates.txt DANGEROUS - Removing duplicates automatically - DANGEROUS fdupes -rdN Recursively shred/erase find &lt;dir&gt; -depth -type f -exec shred -v -n 1 -z -u {} \\; Find largest file in a directory and subdirectories find &lt;dir&gt; -printf &#39;%s %p\\n&#39;| sort -nr | head -10` find . -type f -size +10000k -exec ls -lh {} \\; Disk usage by directory (human readable form) du -h --max-depth=1 | sort -h Rename files using string matching rename 's/JPG/jpg/g' *.JPG Rename recursively through sub directories find . -depth -exec rename 's/JPG/jpg/g' {} + Randomly order the lines in a file shuf -n 1 $FILE Unique file exensions find * | awk -F . {'print $2'} | sort | uniq -c Randomly select words of any length cat /usr/share/dict/british-english | shuf -n 10 Randomnly select words of length 6 grep -E &#39;^[[:alpha:]]{6}$&#39; /usr/share/dict/british-english | shuf -n 10 Translate words dict -d &lt;dict&gt; &lt;word&gt; Available dictionaries dict -I or dict -D Weather curl wttr.in/london Extract filename and extension in bash FILE=&quot;example.tar.gz&quot; echo &quot;${FILE%%.*}&quot; echo &quot;${FILE%.*}&quot; echo &quot;${FILE#*.}&quot; echo &quot;${FILE##*.}&quot; ## example ## example.tar ## tar.gz ## gz 8.2 Backups tar tar -cvpzf backup.tar.gz --exclude=/backup.tar.gz --one-file-system / sudo tar --exclude=&#39;/home/user/???&#39; --exclude=&#39;/home/user/???&#39; cvpf destination.tar /home/user # Reset numeric owner (useful for sharing between systems) tar --numeric-owner --group=1000 --owner=1000 ... rsync rsync -rtvu --exclude &quot;Pictures&quot; --exclude &quot;Downloads&quot; --exclude &quot;Music&quot; /home/user/ /media/.../ rsync -rtvu --delete source_folder/ destination_folder/ Command line Weather curl wttr.in/lisbon Extract links from web page lynx -listonly -nonumbers -dump http://www.example.com 8.3 PDF &amp; LaTeX Split a pdf file pdftk file.pdf cat 12-15 output outfile_p12-15.pdf Merge pdf files pdftk file1.pdf file2.pdf cat output out.pdf PDF Total number of pages exiftool -T -filename -PageCount -s3 -ext pdf &lt;dir&gt; Converting a text file to PDF pandoc file.txt -o file.pdf Converting a text file to HTML pandoc file.txt -o file.html Converting images to PDF convert -page A4 img1.jpg -append img2.jpg -append img.pdf Stamping/overlaying a PDF file pdftk file.pdf multistamp stamp.pdf output Stamped.pdf PDF to PNG or JPG (images) handles multiple pages pdftoppm -png file.pdf outFileStem pdftoppm -jpeg -gray file.pdf outFileStem Clean file names (-n for dryrun) detox -r -v &lt;dir&gt; e.g. detox -r -v $(pwd) Unencryting PDFs gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=unencrypted.pdf \\ -c .setpdfwrite -f encrypted.pdf Script to create handouts for course notes #!/bin/sh for pdffile in slides1.pdf slides2.pdf slides3.pdf do pdfjam --batch --nup 2x2 --scale 0.8 --frame true --a4paper --landscape \\ --delta &quot;0.7cm 0.7cm&quot; --suffix &quot;4up&quot; --outfile . $pdffile done pdfjoin --outfile Handouts.pdf slides1-4up.pdf slides2-4up.pdf slides3-4up.pdf 8.4 Image &amp; Video Processing Before Sharing Photos # exiftool part explained below. exiftool -r &#39;-FileName&lt;CreateDate&#39; -d &#39;DESCRIPTION_%Y%m%d-%H%M%S%%-c.%%le&#39; . mogrify -strip *.jpg Remove EXIF info and resize mogrify -strip -resize 25% *.JPG Rotate photos by 90 degrees mogrify -rotate 90 *JPG Convert from jpg to PDF convert *.JPG pics.pdf Rename files using EXIF information Rename with date and time from EXIF info ** Rename image files per EXIF data** Source: (https://superuser.com/questions/205417/sort-and-rename-images-by-date-in-exif-info) On Linux you can use the command exiftool. For some reason the online manual does not contain the “RENAMING EXAMPLES” section which gave me the essential hint. For JPG only files the following command invocation should do the job exiftool -r &#39;-FileName&lt;CreateDate&#39; -d &#39;XXXX_%Y%m%d-%H%M%S%%-c.%%le&#39; . # To arrange in folders by year exiftool -r &#39;-FileName&lt;CreateDate&#39; -d &#39;/home/user/Pictures/Keep/%Y/Orig_%Y%m%d-%H%M%S%%-c.%%le&#39; &lt;dir&gt; Explanation: -r is for recursion ‘-FileName&lt;CreateDate’ tells exiftool to rename the file accordingly to its EXIF tag CreateDate (you can try others like ModifyDate though) -d ‘%Y%m%d-%H%M%S%%-c.%%le’ tells how to build the filename string from the date source “CreateDate” (the “%-c” will append a counter in case of file collisions, the “%le” stands for “lower cased file extension”) Note: I used “-FileName&lt;…” here for renaming the files and moving it to another folder within one step. The manual points out that you have to use the “-Directory&lt;…” syntax for folder operations. It worked for me this way though. Video file info to CSV exiftool -r -imagewidth -imageheight -duration -filesize -csv * &gt; temp.csv Source: (https://superuser.com/questions/205417/sort-and-rename-images-by-date-in-exif-info) Short link: http://bit.ly/1HhFcfO Remove camera related info exiftool -MakerNotes:all='' *.JPG Convert webm to mp4 ffmpeg -i &quot;v1.webm&quot; -qscale 0 &quot;v1.mp4&quot; Convert webm to mp4 recursively Two methods find -name &quot;*.webm&quot; -exec ffmpeg -i {} -qscale 0 {}.mp4 \\; for i in *.webm ; do ffmpeg -i &quot;$i&quot; -qscale 0 $(basename &quot;${i/.webm}&quot;).mp4 sleep 60 done 8.5 Security Checksum Source: (https://askubuntu.com/questions/318530/generate-md5-checksum-for-all-files-in-a-directory) great checksum creation/verification program is rhash. It creates even SFV compatible files, and checks them too. It supports md4, md5, sha1, sha512, crc32 and many many other. Moreover it can do recursive creation (-r option) like md5deep or sha1deep. Last but not least you can format the output of the checksum file; for example: rhash -r --md5 -p &#39;%h,%p /home/\\n&#39; outputs a CSV file including the full path of files. Encrpyted compressed 7zip archive 7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on -mhe=on -p&#39;eat_my_shorts&#39; archive.7z dir1 option Details a Add (dir1 to archive.7z) -t7z Use a 7z archive -m0=lzma2 Use lzma2 method -mx=9 Use the ‘9’ level of compression = Ultra -mfb=64 Use number of fast bytes for LZMA = 64 -md=32m Use a dictionary size = 32 megabytes -ms=on Solid archive = on -mhe=on 7z format only : enables or disables archive header encryption -p{Password} Add a password 8.6 System &amp; Hardware Useful commands (see man pages) dmidecode, lshw, inxi (prefer inxi) Identify hardware model and other info sudo dmidecode -t1 inxi -M inxi -bxx lshw -short Identify installed Linux Distro lsb_release -a 8.7 Debian Debian Packages of R Software: Backports info at (https://cran.r-project.org/bin/linux/debian/) Version installed lsb_release -a All currently installed packages. dpkg --get-selections dpkg-query -l # Just extracting package names apt-mark showmanual dpkg-query -f &#39;${binary:Package}\\n&#39; -W Install packages from a file apt-get install $(grep -vE &quot;^\\s*#&quot; filename | tr &quot;\\n&quot; &quot; &quot;) Recreating a partition table (via root) - USE WITH CARE cfdisk /dev/sdx mkfs -t vfat /dev/dsx1 8.8 Misc Get MS Windows Key sudo cat /sys/firmware/acpi/tables/MSDM Source: (https://askubuntu.com/questions/953126/can-i-recover-my-windows-product-key-from-ubuntu) Calendar with history (https://akr.am/blog/posts/today-in-history-brought-to-you-by-unix) Speech to text Source: (https://askubuntu.com/questions/161515/speech-recognition-app-to-convert-mp3-to-text) The software you can use is CMUSphinx. Unlike suggested in another answer Julius is not suitable because it requires models. Models for large vocabulary speech recognition are not available for Julius. You can use pocketsphinx to convert audio file. Those two commands must do the work. First you convert the file to the required format and then you recognize it: ffmpeg -i file.mp3 -ar 16000 -ac 1 file.wav Then run pocketsphinx (results in file.txt) pocketsphinx_continuous -infile file.wav 2&gt; pocketsphinx.log &gt; file.txt Text to Speech pico2wave The voice is more human sounding. Save the following as tts.sh #!/bin/bash pico2wave -l=en-GB -w=/tmp/test.wav &quot;$1&quot; aplay /tmp/test.wav rm /tmp/test.wav Test it with: ./tts.sh “Hello World! Where are you living? Since when.” You can also use a file: pico2wave -l=en-GB -w=test.wav &quot;$(cat file.txt)&quot; espeak A robotic voice with more language choices. espeak --stdout &quot;this is a test&quot; | paplay echo &quot;these are my notes&quot; &gt; text.txt espeak --stdout -f text.txt &gt; text.wav paplay text.wav Correcting file names The detox utility renames files to make them easier to work with. It removes spaces and other such annoyances. It’ll also translate or cleanup Latin-1 (ISO 8859-1) characters encoded in 8-bit ASCII, Unicode characters encoded in UTF-8, and CGI escaped characters. detox -s iso8859_1 -r -v -n /tmp/new_files Will run the sequence iso8859_1 recursively, listing any changes, without changing anything, on the files of /tmp/new_files. "],
["docker.html", "Chapter 9 Docker", " Chapter 9 Docker Remove containers docker ps docker ps -a docker rm $(docker ps -qa --no-trunc --filter &quot;status=exited&quot;) How to cleanup (unused) resources (use carefully) Source: (https://gist.github.com/bastman/5b57ddb3c11942094f8d0a97d461b430) dcleanup(){ docker rm -v $(docker ps --filter status=exited -q 2&gt;/dev/null) 2&gt;/dev/null docker rmi $(docker images --filter dangling=true -q 2&gt;/dev/null) 2&gt;/dev/null } Once in a while, you may need to cleanup resources (containers, volumes, images, networks) … delete volumes Source: (https://github.com/chadoe/docker-cleanup-volumes) docker volume rm $(docker volume ls -qf dangling=true) docker volume ls -qf dangling=true | xargs -r docker volume rm Delete networks docker network ls docker network ls | grep &quot;bridge&quot; docker network rm $(docker network ls | grep &quot;bridge&quot; | awk &#39;/ / { print $1 }&#39;) Rocker - R &amp; RStudio in container See Rocker wiki for more information. Login: rstudio – Password: rstudio docker run -d -p 8787:8787 -v $(pwd):/home/rstudio rocker/r-base docker run -d -p 8787:8787 -v $(pwd):/home/rstudio rocker/tidyverse docker run -d -p 8787:8787 -v $(pwd):/home/rstudio rocker/verse Apache docker run -p 80:80 -dit --name http24 -v &quot;$PWD&quot;:/usr/local/apache2/htdocs/ httpd:2.4 "]
]
